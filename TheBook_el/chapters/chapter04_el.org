#+TITLE: Chapter04_el
* Κεφάλαιο 4 - Αρχές Σύνθεσης Ήχου

** Προοίμιο

/Εισάγονται οι αρχές επεξεργασίας ψηφιακού σήματος και του προγραμματισμού,/
/όπως σήμα, buffer, γεννήτρια, δίαυλος, μεταβλητή, συνάρτηση κ.α./
/ημιτονοειδής ταλάντωση και σύνθετες κυματομορφές (πριονωτή, τριγωνική, τετράγωνη)/
/Άσκηση: "Let There Be Sound"/

/θέματα Pd: osc~, phasor~, αριθμητικοί τελεστές σήματος, line~, pack, vslider, array, tabwrite~, dac~, expr~ /

** Κύριο Μέρος

*** Pure Data

Τα αντικείμενα για τη σύνθεση και διαχείριση σήματος είναι η δεύτερη κατηγορία αντικειμένων του Pure Data.
Διακρίνονται ως προς τα αντικείμενα διαχείρισης μηνυμάτων μέσω του συμβόλου "~" στο τέλος της ονομασίας τους,
ενώ τα καλώδια διασύνδεσης τους είναι πιο παχιά. *Figure "MsgAudioCompare"*
Θα δούμε πως πολλά αντικείμενα στο Pure Data υπάρχουν σε δύο μορφές:
χωρίς το σύμβολο "~"  για διαχείριση μηνυμάτων, και με το σύμβολο "~" για διαχείριση σήματος.
Μια ακόμη διαφορά είναι πως το σύστημα επεξεργάζεται το σήμα σε συγχρονισμό με τη συχνότητα δειγματοληψίας της κάρτας ήχου.
Πρακτικά αυτό σημαίνει πως η ροή της πληροφορίας σήματος είναι συνεχής και σε πραγματικό χρόνο, όσες συνδέσεις και να κάνουμε.

Οι ταλαντωτές είναι οι βασικές γεννήτριες σήματος στη σύνθεση ηλεκτρονικής μουσικής.
Το Pure Data αναγνωρίζει ένα ηχητικό σήμα ως μια σειρά τιμών στο εύρος ανάμεσα -1 και 1.
Τα κύρια αντικείμενα για την παραγωγή ταλαντώσεων είναι τα osc~ και phasor~,
υπεύθυνα για ημιτονοειδή και πριονωτή ταλάντωση αντίστοιχα.

Στο *Figure "Oscillator"* παρουσιάζεται ένα σύστημα με πηγή σήματος το αντικείμενο osc~,
το οποίο παράγει ημιτονοειδή ταλάντωση στη συχνότητα που έχει οριστεί ως αρχική τιμή.
Την αρχική τιμή συχνότητας του osc~ μπορούμε να τη μεταβάλλουμε με number box στη ζεστή είσοδο.
Για να μεταβάλλουμε την ένταση του osc~ θα χρησιμοποιήσουμε έναν πολλαπλασιαστή σήματος,
δηλαδή έναν αριθμητικό τελεστή πολλαπλασιασμού με το σύμβολο "~".
To osc~ συνδέεται στη ζεστή είσοδο του πολλαπλασιαστή σήματος και παράγει συνεχή ροή δεδομένων,
ενώ στην κρύα είσοδο συνδέουμε ένα αντικείμενο line~, το οποίο δέχεται ζεύγη τιμών:
η πρώτη τιμή του ζεύγους αποτελεί τον προορισμό και η δεύτερη τον χρόνο σε mlsecs που θα διαρκέσει η διαδρομή.
Ο στόχος είναι να δημιουργούμε ομαλές μεταβάσεις προς κάθε νέα τιμή έντασης από 0 έως 1 που εισάγουμε.

Τα ζεύγη τιμών στο line~ παρέχονται από το αντικείμενο pack, το οποίο συναρμολογεί λίστες στοιχείων με πλήθος ανάλογο των παραμέτρων του.
Στη συγκεκριμένη περίπτωση, το pack έχει οριστεί με δύο παραμέτρους και για αυτόν τον λόγο διαθέτει δύο εισόδους.
Στην πρώτη είσοδο έχουμε συνδέσει έναν κάθετο ολισθητή, δηλαδή ένα αντικείμενο vslider.
Αφού θέλουμε οι τιμές έντασης να κυμαίνονται ανάμεσα σε 0 και 1,
τις έχουμε θέσει ως ελάχιστο και μέγιστο όριο στις ιδιότητες του vslider αντικειμένου.
Η δεύτερη είσοδος του pack είναι κενή, συνεπώς με κάθε νέα τιμή από το vslider ως πρώτο στοιχείο της λίστας,
η δεύτερη τιμή θα είναι πάντα 50 και θα αποτελεί τον χρόνο μετάβασης σε mlsecs.

Την κυματομορφή του σήματος μπορούμε να παρακολουθήσουμε μέσω του αντικειμένου array.
Το αντικείμενο array αποτελεί ουσιαστικά έναν πίνακα αποθήκευσης τιμών.
Εισάγοντας το αντικείμενο στο πρόγραμμα ζητείται να ορίσουμε ένα όνομα και ένα μέγεθος.
Μέσω του ονόματος θα επικοινωνούν με το συγκεκριμένο array όλα τα υπόλοιπα αντικείμενα.
Ως μέγεθος ορίζουμε ενδεικτικά τα 1000 σημεία για τον άξονα x.
Ο άξονας y έχει εξ'ορισμού το εύρος -1 έως 1.
Συνδέοντας την έξοδο του πολλαπλασιαστή σήματος με την είσοδο του αντικειμένου tabwrite~
καταγράφουμε στο array, στο οποίο αναφέρεται το tabwrite~, τις τιμές του σήματος,
ενώ με το metro αποτυπώνουμε τις τιμές αυτές κάθε 50 mlsecs.

Τέλος, για να ακούσουμε το αποτέλεσμα χρειάζεται να έχουμε αφενός ενεργοποιήσει τον ήχο στην κονσόλα,
αφετέρου να οδηγήσουμε το σήμα στο αντικείμενο dac~ (μετατροπέας ψηφιακού σε αναλογικό).
Το dac~ στέλνει, ανάλογα με τις παραμέτρους του, το σήμα στα αντίστοιχα κανάλια της κάρτας ήχου.
Εξ'ορισμού έχει 2 παραμέτρους και στέλνει το σήμα στο αριστερό και δεξί κανάλι.
Να σημειωθεί εδώ πως το dac~, όπως νωρίτερα το pack, ανήκουν στα αντικείμενα που ανάλογα με τις παραμέτρους τους
εμφανίζουν και τις αντίστοιχες εισόδους.

Για να δημιουργήσουμε μια πριονωτή ταλάντωση, αντικαθιστούμε το αντικείμενο osc~ με το αντικείμενο phasor~. *Figure "Sawtooth"*
Φυσικά, αν θέλουμε να διατηρήσουμε και τις δύο γεννήτριες και να παρατηρούμε τις κυματομορφές που παράγουν,
χρειάζεται να μετονομάσουμε το array και το tabwrite~ της phasor~ γεννήτριας.

Τέλος, θα δείξουμε πώς δημιουργείται μια γεννήτρια τετράγωνης κυματομορφής, καθώς δεν υπάρχει αντίστοιχο αντικείμενο στο Pure Data.
H τετράγωνη κυματομορφή περιέχει μόνο τις μονές αρμονικές και οι τιμές της εναλλάσσονται ανάμεσα στις τιμές 0 και 1.
Τα αντικείμενα expr και expr~ ελέγχουν συνθήκες μηνυμάτων και σήματος αντίστοιχα, εξάγοντας 1 αν ευσταθούν, αλλιώς 0.
Ελέγχοντας αν οι τιμές σήματος του phasor~ είναι μεγαλύτερες από 0.5 μετατρέπουμε το σήμα σε ακολουθίες άσσων και μηδενικών. *Figure "Square"*


*** SuperCollider
